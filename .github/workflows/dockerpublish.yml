name: Docker Image Publishing

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*.*.*

  # Run tests for any PRs.
  pull_request:

  schedule:
    - cron: '0 6 * * *'

env:
  DOCKER_REGISTRY: "ghcr.io"

jobs:
  push:
    strategy:
      matrix:
        include:
          - readis-php: "7.1"
            folder: "readis"
            php-version: "7.1"
            image-name: "readis-php-71"
          - readis-php: "7.2"
            folder: "readis"
            php-version: "7.2"
            image-name: "readis-php-72"
          - readis-php: "7.3"
            folder: "readis"
            php-version: "7.3"
            image-name: "readis-php-73"
          - readis-php: "7.4"
            folder: "readis"
            php-version: "7.4"
            image-name: "readis-php-74"
          - readis-php: "8.0"
            folder: "readis"
            php-version: "8.0"
            image-name: "readis-php-80"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: docker build --pull -f ./${{ matrix.folder }}/${{ matrix.php-version }}/Dockerfile -t ${{ matrix.image-name }} ./${{ matrix.folder }}/${{ matrix.php-version }}

      - name: Push image
        run: |
          IMAGE_NAME=${{ matrix.image-name }}
          IMAGE_ID=$DOCKER_REGISTRY/${{ github.actor }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  release:
    needs:
      - push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract version
        id: data
        run: |
          # Strip git ref prefix from version
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_VERSION=$(echo $RELEASE_VERSION | sed -e 's/^v//')

          echo $RELEASE_VERSION
          echo "##[set-output name=version;]$RELEASE_VERSION"

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ steps.data.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}